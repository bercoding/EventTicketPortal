const nodemailer = require('nodemailer');
require('dotenv').config(); // ƒê·∫£m b·∫£o b·∫°n ƒë√£ c√†i ƒë·∫∑t dotenv v√† c√≥ file .env

// In ra th√¥ng tin c·∫•u h√¨nh email khi kh·ªüi ƒë·ªông (lo·∫°i b·ªè m·∫≠t kh·∫©u)
console.log('üìß Email Configuration:');
console.log('- EMAIL_HOST:', process.env.EMAIL_HOST);
console.log('- EMAIL_PORT:', process.env.EMAIL_PORT);
console.log('- EMAIL_SECURE:', process.env.EMAIL_SECURE);
console.log('- EMAIL_USER:', process.env.EMAIL_USER);
console.log('- EMAIL_FROM:', process.env.EMAIL_FROM || process.env.EMAIL_USER);

// Test k·∫øt n·ªëi email khi kh·ªüi ƒë·ªông ·ª©ng d·ª•ng
const testEmailConnection = async () => {
  try {
    console.log('üìß Testing email connection...');
    
    const testTransporter = nodemailer.createTransport({
      host: process.env.EMAIL_HOST,
      port: process.env.EMAIL_PORT,
      secure: process.env.EMAIL_SECURE === 'true',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      }
    });
    
    // Verify connection configuration
    const verify = await testTransporter.verify();
    console.log('‚úÖ Email connection successful:', verify);
    return true;
  } catch (error) {
    console.error('‚ùå Email connection failed:', error.message);
    console.error('Error code:', error.code);
    return false;
  }
};

// G·ªçi h√†m ki·ªÉm tra khi module ƒë∆∞·ª£c load
testEmailConnection();

// C·∫•u h√¨nh transporter v·ªõi d·ªãch v·ª• email c·ªßa b·∫°n
// V√≠ d·ª• n√†y s·ª≠ d·ª•ng SMTP, b·∫°n c√≥ th·ªÉ thay ƒë·ªïi t√πy theo nh√† cung c·∫•p d·ªãch v·ª•
const transporter = nodemailer.createTransport({
  host: process.env.EMAIL_HOST, // V√≠ d·ª•: 'smtp.gmail.com'
  port: process.env.EMAIL_PORT, // V√≠ d·ª•: 587 (TLS) ho·∫∑c 465 (SSL)
  secure: process.env.EMAIL_SECURE === 'true', // true cho port 465, false cho c√°c port kh√°c
  auth: {
    user: process.env.EMAIL_USER, // Email c·ªßa b·∫°n
    pass: process.env.EMAIL_PASS, // M·∫≠t kh·∫©u email ho·∫∑c App Password c·ªßa b·∫°n
  },
  // Th√™m debug n·∫øu NODE_ENV l√† development
  ...(process.env.NODE_ENV === 'development' && {
    debug: true,
    logger: true
  })
});

const sendEmail = async ({ email, subject, message }) => {
  try {
    console.log(`üìß Sending email to: ${email}`);
    console.log(`üìß Subject: ${subject}`);
    
    const mailOptions = {
      from: `"Event Ticket Portal" <${process.env.EMAIL_FROM || process.env.EMAIL_USER}>`,
      to: email,
      subject: subject,
      html: message,
    };

    console.log('üìß Preparing email transport...');
    const info = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email sent successfully:');
    console.log('- Message ID:', info.messageId);
    console.log('- Response:', info.response);
    return {
      success: true,
      messageId: info.messageId,
      response: info.response
    };
  } catch (error) {
    console.error('‚ùå Error sending email:', error);
    console.error('- Error name:', error.name);
    console.error('- Error message:', error.message);
    console.error('- Error code:', error.code);
    if (error.code === 'EAUTH') {
      console.error('‚ùå Authentication error. Check your username and password.');
    } else if (error.code === 'ESOCKET') {
      console.error('‚ùå Socket error. Check your host, port and secure settings.');
    }
    throw error;
  }
};

module.exports = sendEmail; 